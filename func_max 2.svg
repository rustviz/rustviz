<svg width="480px" height="460px" 
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
        id="tl_examples/copy/input/">


    <desc>examples/copy/input/</desc>

    <defs>

    <marker id="arrowhead-start" markerWidth="4" markerHeight="4" refX="0" refY="0" orient="auto">
      <path d="M0,0 L0,4 L2,2"  />
    </marker>
    <marker id="arrowhead-end" markerWidth="10" markerHeight="10" refX="10" refY="5" orient="auto">
      <path d="M10,0 L10,10 L5,5"  />
    </marker>

        <style type="text/css">
        <![CDATA[
        /* general setup */
:root {
    --bg-color:#f1f1f1;
    --text-color: #6e6b5e;
}

svg {
    background-color: var(--bg-color);
}

text {
    vertical-align: baseline;
    text-anchor: start;
}

#heading {
    font-size: 24px;
    font-weight: bold;
}

#caption {
    font-size: 0.875em;
    font-family: "Open Sans", sans-serif;
    font-style: italic;
}

/* code related styling */
text.code {
    fill: #6e6b5e;
    white-space: pre;
    font-family: "Source Code Pro", Consolas, "Ubuntu Mono", Menlo, "DejaVu Sans Mono", monospace, monospace !important;
    font-size: 0.875em;
}
text.funcSigCode {
    fill: #13b516;
    font-weight: bold;
    white-space: pre;
    font-family: monospace;
    font-size: 1.2em;
}


text.lifetime{
    fill: #eca163;
    white-space: pre;
    font-family: monospace;
    font-size: 1em;
}

text.label {
    font-family: "Source Code Pro", Consolas, "Ubuntu Mono", Menlo, "DejaVu Sans Mono", monospace, monospace !important;
    font-size: 0.875em;
}


/* timeline/event interaction styling */
.solid {
    stroke-width: 5px;
}

.hollow {
    stroke-width: 1.5;
}

.dotted {
    stroke-width: 5px;
    stroke-dasharray: "2 1";
}

.extend {
    stroke-width: 1px;
    stroke-dasharray: "2 1";
}

.functionIcon {
    paint-order: stroke;
    stroke-width: 3px;
    fill: var(--bg-color);
    font-size: 20px;
    font-family: times;
    font-weight: lighter;
    dominant-baseline: central;
    text-anchor: start;
    font-style: italic;
}

.functionLogo {
    font-size: 20px;
    font-style: italic;
    paint-order: stroke;
    stroke-width: 3px;
    fill: var(--bg-color) !important;
}

/* flex related styling */
.flex-container {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: nowrap;
    flex-shrink: 0;
}

.lineNumDashLine{
    stroke: #6c6a6a; 
    stroke-width: 2; 
    stroke-dasharray: 5 3; 
    stroke-opacity: 0.5;
}



text.lineNum{
    fill: rgba(90,92,90,0.795);
    font-family: monospace;
    font-size: 0.875em;
}
object.tl_panel {
    flex-grow: 1;
}

object.code_panel {
    flex-grow: 0;
}

.tooltip-trigger {
    cursor: default;
}

.tooltip-trigger:hover{
    filter: url(#glow);
}

/* hash based styling */
[data-hash="0"] {
    fill: #6e6b5e;
}

[data-hash="1"] {
    fill: #1893ff;
    stroke: #1893ff;
}

[data-hash="2"] {
    fill: #ff7f50;
    stroke: #ff7f50;
}

[data-hash="3"] {
    fill: #8635ff;
    stroke: #8635ff;
}

[data-hash="4"] {
    fill: #dc143c;
    stroke: #dc143c;
}

[data-hash="5"] {
    fill: #0a810a;
    stroke: #0a810a;
}

[data-hash="6"] {
    fill: #008080;
    stroke: #008080;
}

[data-hash="7"] {
    fill: #ff6cce;
    stroke: #ff6cce;
}

[data-hash="8"] {
    fill: #00d6fc;
    stroke: #00d6fc;
}

[data-hash="9"] {
    fill: #b99f35;
    stroke: #b99f35;
}

[lifetime-body-hash="1"]{
    fill: #03b72a;
    stroke: #03b72a;
}
[lifetime-dash-hash="1"]{
    fill: rgba(3,183,42,0.600);
    stroke:rgba(3,183,42,0.600);
}

[lifetime-body-hash="2"]{
    fill: #e98615;
    stroke: #e98615;
}
[lifetime-dash-hash="2"]{
    fill: rgba(233,134,21,0.600);
    stroke: rgba(233,134,21,0.600);
}

[lifetime-body-hash="3"]{
    fill: #f10dde;
    stroke: #f10dde;
}
[lifetime-dash-hash="3"]{
    fill: rgba(241,13,222,0.600);
    stroke: rgba(241,13,222,0.600);
}
        
        text {
            user-select: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
        }
        ]]>
        </style>
        <!-- used when pass to function by ref -->
        <g id="functionDot">
             <circle cx="0" cy="0" r="5" fill="transparent"/>
             <text class="functionIcon" dx="-3.5" dy="0" fill="#6e6b5e">f</text>
        </g>
        <marker id="arrowHead" viewBox="0 0 10 10"
            refX="0" refY="4"
            markerUnits="strokeWidth"
            markerWidth="3px" markerHeight="3px"
            orient="auto" fill="gray">
            <path d="M 0 0 L 8.5 4 L 0 8 z" fill="inherit"/>
        </marker>
        <!-- glow highlight filter -->
        <filter id="glow" x="-5000%" y="-5000%" width="10000%" height="10000%" filterUnits="userSpaceOnUse">
            <feComposite in="flood" result="mask" in2="SourceGraphic" operator="in"></feComposite>
            <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
            <feMerge>
                <feMergeNode in="coloredBlur"></feMergeNode>
                <feMergeNode in="coloredBlur"></feMergeNode>
                <feMergeNode in="coloredBlur"></feMergeNode>
                <feMergeNode in="SourceGraphic"></feMergeNode>
            </feMerge>
            <!-- increase brightness -->
            <feComponentTransfer>
                <feFuncR type="linear" slope="2"/>
                <feFuncG type="linear" slope="2"/>
                <feFuncB type="linear" slope="2"/>
            </feComponentTransfer>
        </filter>
    
    
    </defs>



    
    <g id="func_signature">
    
    <text class="funcSigCode" x="10" y="30"> r: &amp;'a i32</text>
    <text class="lifetime" x="10" y="50"> [3,9] &lt;= 'a</text>

    <text class="funcSigCode" x="110" y="30"> = max( </text>

    <text class="funcSigCode" x="170" y="30"> x: &amp;'a i32, </text>
    <text class="lifetime" x="170" y="50"> [5,8] &lt;= 'a</text>

    <text class="funcSigCode" x="276" y="30"> y: &amp;'a i32) </text>
    <text class="lifetime" x="276" y="50"> [6,8] &lt;= 'a</text>

    <!-- <text class="funcSigCode" x="370" y="30"> 2 </text> -->






    </g>

    <g id="labels">

        <text x="70" y="80" style="text-anchor:middle" data-hash="1" class="label tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;r: &amp;i32&lt;/span&gt;, immutable">r<tspan stroke="none">|</tspan>*r</text>
        <text x="160" y="80" style="text-anchor:middle" data-hash="2" class="label tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;x: &amp;i32&lt;/span&gt;, immutable">x<tspan stroke="none">|</tspan>*x</text>
        <text x="230" y="80" style="text-anchor:middle" data-hash="3" class="label tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;y: &amp;i32&lt;/span&gt;, mutable">y<tspan stroke="none">|</tspan>*y</text>
        <text x="330" y="80" style="text-anchor:middle" data-hash="4" class="label tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;'a, bind with (r,x,y)&lt;/span&gt;">'a</text>

    </g>

    <g id="timelines">


        
        <!-- r -->
        <line data-hash="1" class="solid tooltip-trigger" x1="70" y1="115" x2="70" y2="325" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of r: #3 -> #9." />

        <!-- x -->
        <line data-hash="2" class="solid tooltip-trigger" x1="160" y1="200" x2="160" y2="300" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of x: #5 -> #8." />

        <!-- y -->
        <line data-hash="3" class="solid tooltip-trigger" x1="230" y1="225" x2="230" y2="300" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of y: #6 -> #8." />

        <!-- 'a -->
        <!-- dashed 'a [possible choice for 'a and comparison with other related lifetime] -->
        <line lifetime-dash-hash="1"  stroke-width="2" stroke-dasharray="5,2" class="tooltip-trigger" x1="300" y1="95" x2="300" y2="350" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; 'a has infinite possible scope. But we want it as small as possible." />
        
        <line data-hash="1" class="solid tooltip-trigger" x1="300" y1="115" x2="300" y2="325" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of r: #3 -> #9." />

        <line data-hash="2" class="solid tooltip-trigger" x1="300" y1="200" x2="300" y2="300" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of x: #5 -> #8." />
        
        <line data-hash="3" class="solid tooltip-trigger" x1="300" y1="225" x2="300" y2="300" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; lifetime of y: #6 -> #8." />
        <g id="s">
        <line lifetime-body-hash="1"  class="solid tooltip-trigger" x1="330" y1="115" x2="330" y2="325" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;z&lt;/span&gt; 'a = [#3,#9]. The smallest scope that validates all references related to it." />

        </g>
        <!-- <polyline data-hash="4" stroke-width="5px"  points="300 115 300 325 "  class="tooltip-trigger" data-tooltip-text="Immutable borrow from &lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;x&lt;/span&gt; to &lt;span style=&quot;font-family: 'Source Code Pro', Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono', monospace, monospace !important;&quot;&gt;y&lt;/span&gt;" style="fill: none;"/>  -->


            
    </g>


    <!-- circle means end points of lifetime.  -->
    <!-- triangl (polygon with three vertices) means comparison with 'a  -->
    <g id="events">
        <!-- r -->
        <circle cx="70" cy="115" r="5" data-hash="1" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;x&lt;/span&gt; r comes into scope."/>
        <circle cx="70" cy="325" r="5" data-hash="1" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; r goes out of scope since it's a reference and will never be used."/>
        
        <!-- x -->
        <circle cx="160" cy="200" r="5" data-hash="2" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; x comes into scope."/>
        <circle cx="160" cy="300" r="5" data-hash="2" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; x goes out of scope since it's a reference and will never be used."/>
        
        <!-- y -->
        <circle cx="230" cy="225" r="5" data-hash="3" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; y comes into scope."/>
        <circle cx="230" cy="300" r="5" data-hash="3" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; y goes out of scope since it's a reference and will never be used."/>

        <!-- a->x -->
        <polygon data-hash="2" points="300,195 295,200 305,200" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; The smallest line number that validates all references related to &lt;'a&gt; " />
        <polygon data-hash="2" points="300,305 295,300 305,300" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; The largest line number that validates all references related to &lt;'a&gt; " />
        
        <!-- a->r -->
        <polygon data-hash="1" points="300,110 295,115 305,115" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; The smallest line number that validates all references related to &lt;'a&gt; " />
        <polygon data-hash="1" points="300,330 295,325 305,325" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; The largest line number that validates all references related to &lt;'a&gt; " />

        <!-- a->y -->
        <polygon data-hash="3" points="300,220 295,225 305,225" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; The smallest line number that validates all references related to &lt;'a&gt; " />
        <polygon data-hash="3" points="300,305 295,300 305,300" data-tooltip-text="" />

        <!-- 'a -->
        <circle cx="330" cy="115" r="5" lifetime-body-hash="1" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; x comes into scope."/>
        <circle cx="330" cy="325" r="5" lifetime-body-hash="1" class="tooltip-trigger" data-tooltip-text="&lt;span style=&quot;font-family: 'Source Code Pro',
        Consolas, 'Ubuntu Mono', Menlo, 'DejaVu Sans Mono',
        monospace, monospace !important;&quot;&gt;&lt;/span&gt; x goes out of scope since it's a reference and will never be used."/>
    </g>

    <g id="line_numbers">

        <line class="lineNumDashLine" x1="30" y1="115" x2="300" y2="115" />
        <text class="lineNum" x="30" y="115" text-anchor="start">#3</text>

        <line class="lineNumDashLine" x1="30" y1="200" x2="300" y2="200" />
        <text class="lineNum" x="30" y="200" text-anchor="start">#5</text>

        <line class="lineNumDashLine" x1="30" y1="225" x2="300" y2="225" />
        <text class="lineNum" x="30" y="225" text-anchor="start">#6</text>

        <line class="lineNumDashLine" x1="30" y1="300" x2="300" y2="300" />
        <text class="lineNum" x="30" y="300" text-anchor="start">#8</text>

        <line class="lineNumDashLine" x1="30" y1="325" x2="300" y2="325" />
        <text class="lineNum" x="30" y="325" text-anchor="start">#9</text>


    </g>

    

</svg>
